version: '3.5'

networks:
  backend:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16
          gateway: 172.21.5.254

services:
  postgres:
    build:
      context: ./docker/postgres
      args:
        - POSTGRES_VERSION=15-alpine
    container_name: postgres
    restart: always
    volumes:
      - ${POSTGRES_DIR}:/var/lib/postgresql/data
      - ./docker/postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    ports:
      - "127.0.0.1:5432:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      backend:
        ipv4_address: 172.21.0.11

  redis:
    image: redis:latest
    container_name: next-redis
    restart: always
    volumes:
      - ./../data/redis:/data
    ports:
      - "6379:6379"
    networks:
      backend:
        ipv4_address: 172.21.0.13
    env_file:
      - .env
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}

  api:
    build:
      context: ./
      dockerfile: ./docker/api/Dockerfile
    container_name: api
    depends_on:
      - postgres
    restart: always
    networks:
      backend:
        ipv4_address: 172.21.0.12
    ports:
      - 127.0.0.1:${PORT}:${PORT}
    volumes:
      - ./:/var/www
      - /var/www/node_modules
    environment:
      - POSTGRES_HOST=172.21.0.11
      - REDIS_HOST=172.21.0.13